{% extends "base.html.twig" %}
{% import "jury/jury_macros.twig" as macros %}

{% block title %}Register Account{% endblock %}

{% block extrahead %}
    {{ parent() }}
    {{ macros.select2_extrahead() }}
    <link rel="stylesheet" href="{{ asset('style_login.css') }}">
{% endblock %}

{% block body %}
    <div class="additional-logins">

        {{ form_start(registration_form, { 'attr': {'class': 'form-signin'} }) }}
        <h1 class="h3 mb-3 font-weight-normal">Register Account</h1>
        <div class="mb-2">
            Enter the following information to register your account with DOMjudge.
        </div>
        {# Form elements will be renderd automatically #}
        {{ form_end(registration_form) }}
    </div>
{% endblock %}

{% block extrafooter %}
    <script>
        $(function () {
            var $affiliation = $('#user_registration_affiliation');

            if ($affiliation.length === 0) {
                return;
            }

            var $affiliationNew = $('[data-id="user_registration_affiliation_new"]');

            // only display the new affiliation name and country fields when "Add affiliation..." is selected

            if ($affiliationNew.length) {
                $affiliation.on('change', function () {
                    var $affiliationNameGroup = $('#user_registration_affiliationName').closest('.form-group');
                    var $affiliationCountryGroup = $('#user_registration_affiliationCountry').closest('.form-group');

                    if ($affiliationNew.is(':selected')) {
                        $affiliationNameGroup.show();
                        $affiliationCountryGroup.show();
                    } else {
                        $affiliationNameGroup.hide();
                        $affiliationCountryGroup.hide();
                    }
                });

                $affiliation.change();
            }

            // during search, move the options "No affiliation" and "Add affiliation..." to the end

            var $options = $affiliation.find('option');
            var preferredOptions = [];
            var separator = null;
            for (var i = 0; i < $options.length; i++) {
                var option = $options[i];
                var $option = $(option);
                if (i === 0 && $option.attr("value") === "") {
                    $option.addClass("placeholder");
                } else if (!$option.attr("value") && $option.is(':disabled')) {
                    separator = option;
                    break;
                } else {
                    preferredOptions.push(option);
                }
            }
            if (separator === null) {
                preferredOptions = [];
            } else {
                $(preferredOptions).addClass("preferred");
            }

            function matcher(params, data) {
                if (params.term) {
                    var $element = $(data.element);
                    if ($element.hasClass("placeholder")) {
                        return null;
                    } else if ($element.hasClass("preferred") || data.element === separator) {
                        return $.extend({}, data, {fakeMatch: true});
                    }
                }
                return $.fn.select2.defaults.defaults.matcher(params, data);
            }

            function sorter(data) {
                var fakeMatches = [];
                var affiliationNewMatch = [];
                var separatorMatch = [];
                var other = [];
                for (var i = 0; i < data.length; i++) {
                    if (data[i].fakeMatch) {
                        if ($affiliationNew.length && data[i].element === $affiliationNew[0]) {
                            affiliationNewMatch.push(data[i]);
                        } else if (data[i].element === separator) {
                            separatorMatch.push(data[i]);
                        } else {
                            fakeMatches.push(data[i]);
                        }
                    } else {
                        other.push(data[i]);
                    }
                }
                if (other.length === 0 || fakeMatches.length + affiliationNewMatch.length === 0) {
                    separatorMatch = [];
                }
                return other.concat(separatorMatch, affiliationNewMatch, fakeMatches);
            }

            $affiliation.select2({
                matcher: matcher,
                sorter: sorter,
            });

        });
    </script>

    {% include 'jury/partials/country_select.html.twig' with {field: '#user_registration_affiliationCountry'} %}
{% endblock %}
